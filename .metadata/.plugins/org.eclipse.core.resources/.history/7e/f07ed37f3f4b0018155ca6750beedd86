package edu.uqam.inf5153.tp3.domaine;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JComponent;

import org.json.simple.parser.ParseException;

/*
 * Design pattern Observer
 * inspiré de : https://www.tutorialspoint.com/design_pattern/observer_pattern.htm
 * voir : classe Observateur et méthode attach et informerLesUtilisateurs
 * */
public class Dossier {
	private List<Observateur> observateurs = new ArrayList<Observateur>();

	
	
	private String maladie = new String();
	private String medecin = new String();
	private Personne patient = new Personne();
	private GENRE genre = GENRE.NOT_KNOWN;
	private String dateDeNaissance = new String(); 
	private String pere = new String();
	private String mere = new String();
	private String villeNaissance = new String();
	private Coordonnees coor = new Coordonnees();
	private ArrayList<Visite> visites = new ArrayList<>();
	private ArrayList<Antecedent> antecedents = new ArrayList<>();
	
	public Dossier(){}
	
	public String getNom() {
		return patient.nom;
	}
	
	public String getPrenom() {
		return patient.prenom;
	}
	
	public String getMaladie() {
		return maladie;
	}
	public void setMaladie(String maladie) {
		this.maladie = maladie;
		informerLesObservateurs();
	}
	public String getMedecin() {
		return medecin;
	}
	public void setMedecin(String medecin) {
		this.medecin = medecin;
		informerLesObservateurs();
	}

	public String getGenre() {
		return genre.toString();
	}

	public void setGenre(GENRE genre) {
		this.genre = genre;
		informerLesObservateurs();
	}

	public String getDateDeNaissance() {
		return this.dateDeNaissance;
	}
	
	public String getVilleNaissance() {
		return this.villeNaissance;
	}
	
	public String getPere(){
		return this.pere;
	}
	
	public String getMere(){
		return this.mere;
	}
	
	public String getCoordonnees() {
		return this.coor.toString();
	}

	public Antecedent[] getAntecedents() {	
		Antecedent[] ant = new Antecedent[antecedents.size()];;
		ant = antecedents.toArray(ant);
		return ant;
	}
	
	public void setAntecedents(Antecedent ant) {	
		antecedents.add(ant);
		informerLesObservateurs();
		
	}
	public Visite[] getVisites() {
		
		Visite[] vis = new Visite[visites.size()];;
		vis = visites.toArray(vis);
		return vis;
		
		
	}
	public void setVisite(Visite vis) {	
		visites.add(vis);
		informerLesObservateurs();
		
	}

	public void attach(Observateur obs){
		observateurs.add(obs);		
	}

	public void informerLesObservateurs() throws ClassNotFoundException, ParseException, SQLException{
		for (Observateur observateur : observateurs) {
			observateur.update(this);
		}
	} 	
}

